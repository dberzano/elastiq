#!/usr/bin/env python

## @file elastiq2
#  Main executable for the elastiq daemon.
#
#  Prepares working directories and the environment, then invokes methods from the Elastiq class.
#  This script can be used in a way that resembles the `/etc/init.d` scripts.

import sys, os.path
from getopt import getopt, GetoptError
#from piheat import PiHeat
from elastiq.daemontest import Elastiq

daemondir = None
pidfile = None
conffile = None
logdir =  None
statefile = None

# Parse command-line arguments
try:
  opts, args = getopt(sys.argv[1:], '',
    [ 'config=', 'logdir=', 'statefile=', 'pidfile=', 'daemondir=' ])
  for o, a in opts:

    if o == '--daemondir':
      daemondir = a
    elif o == '--pidfile':
      pidfile = a
    elif o == '--config':
      conffile = a
    elif o == '--logdir':
      logdir = a
    elif o == '--statefile':
      statefile = a
    else:
      assert False, 'This should not happen: o=%s a=%s' % (o, a)

except GetoptError as e:
  print 'elastiq: %s' % e
  sys.exit(1)

if daemondir is None:
  force_daemondir = False
  daemondir = os.path.expanduser('~/.elastiq')
else:
  force_daemondir = True

if force_daemondir == False and daemondir.startswith('/var/lib/elastiq'):

  # Detected a system-wide installation
  daemondir = None
  pidfile_default = '/var/run/elastiq.pid'
  conffile_default = '/etc/elastiq.conf'
  logdir_default = '/var/log/elastiq'
  statefile_default = '/var/lib/elastiq/state'

else:

  pidfile_default = '%s/elastiq.pid' % daemondir
  conffile_default = '%s/elastiq.conf' % daemondir
  logdir_default = '%s/log' % daemondir
  statefile_default = '%s/state' % daemondir

  if not os.path.isdir(daemondir):
    os.mkdir(daemondir, 0700)
  else:
    os.chmod(daemondir, 0700)

if pidfile is None:
  pidfile = pidfile_default
if conffile is None:
  conffile = conffile_default
if logdir is None:
  logdir = logdir_default
if statefile is None:
  statefile = statefile_default

# Debug
# print daemondir
# print pidfile
# print conffile
# print logdir
# print statefile

try:
  cmd = args[0]
except IndexError:
  cmd = None

daemon_instance = Elastiq('elastiq',
  pidfile=pidfile, conffile=conffile, logdir=logdir, statefile=statefile)

r = None
if cmd == 'start':
  r = daemon_instance.start()
elif cmd == 'stop':
  r = daemon_instance.stop()
elif cmd == 'status':
  r = daemon_instance.status()
elif cmd == 'nodaemon':
  r = daemon_instance.start_foreground()
else:
  sys.stderr.write( 'Usage: %s [start|stop|status|nodaemon]\n' % os.path.basename(sys.argv[0]) )
  r = False

if isinstance(r, bool):
  if r == True:
    sys.exit(0)
  else:
    sys.exit(1)
elif isinstance(r, int):
  sys.exit(r)

# Invalid return code?
assert False, 'Invalid return code: %s' % r
